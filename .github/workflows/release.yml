name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install

      - name: Build SDK
        run: pnpm --filter ./packages/javascript-sdk... build

      - name: Setup .npmrc
        run: |
          cat << EOF > ~/.npmrc
          registry=https://registry.npmjs.org/
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          access=public
          always-auth=true
          EOF

      - name: Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm release --filter ./packages/javascript-sdk...
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  docker:
    needs: release
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: platform/Dockerfile
          push: true
          tags: |
            rushdb/platform:latest
            rushdb/platform:${{ needs.release.outputs.version }}